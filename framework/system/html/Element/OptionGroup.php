<?php/** * OptionGroup.php * * @category   Html * @package    BAZALT * @subpackage System * @copyright  2011 Equalteam * @license    GPLv3 * @version    $Revision: 133 $ *//** * Html_Element_OptionGroup * * @category   Html * @package    BAZALT * @subpackage System * @copyright  2011 Equalteam * @license    GPLv3 * @version    $Revision: 133 $ */class Html_Element_OptionGroup extends Html_Element_Group{    const DEFAULT_CSS_CLASS = 'bz-form-optiongroup';    public function initAttributes()    {        parent::initAttributes();        $this->validAttribute('options', 'array');        $this->template('elements/optiongroup');        $this->addClass(self::DEFAULT_CSS_CLASS);    }    public function prependsName()    {        return false;    }    public function value($value = null)    {        if ($value !== null) {            foreach ($this->elements as $el) {                $el->checked(($el->postValue() == $value));            }            return $this;        }        foreach ($this->elements as $el) {            if ($el->checked()) {                return $el->value();            }        }        return null;    }    public function defaultValue($value = null)    {        if ($value !== null && !$this->form->isPostBack()) {            foreach ($this->elements as $el) {                if ($el->value() == $value) {                    return $el->checked(true);                }            }        }        return $this;    }    public function options($value = null)    {        if ($value === null) {            return parent::options();        }        if (is_array($value)) {            foreach ($value as $key => $option) {                $this->addOption($option, $key);            }        }        return parent::options($value);    }    public function dataBind(ORM_Record $object)    {        $this->value($object->{$this->getOriginalName()});    }    public function addOption($option, $value)    {        $radio = $this->addElement('radio', $value);        $radio->label($option)              ->name($this->getOriginalName())              ->value(false, $value);        return $radio;    }    public function toString()    {        $this->invalidAttribute('name');        $this->invalidAttribute('options');        return parent::toString();    }}